#include <iostream>
#include <vector>
#include <utility>
#include <algorithm>
using namespace std;

int segregatePosNum( int inputArraySize, int inputArray[] ){
    
    int index_npos = 0;
    int index_pos = 1;
    
    while( index_pos < inputArraySize ){
        if ( inputArray[index_npos] > 0 ){
            index_npos++;
            index_pos++;
            continue;
        }
        if ( inputArray[index_pos] <= 0 ){
            index_pos++;
            continue;
        }
        
        inputArray[index_npos] = inputArray[index_pos];
        inputArray[index_pos] = 0;
        index_npos++;
        index_pos++;
    }
    
    return ( index_npos == 0 ? 0 : index_npos - 1 );
}

int findMinPosNum( int inputArraySize, int inputArray[] ){
    
    int last_pos_index = segregatePosNum( inputArraySize, inputArray );
    
    for ( int i = 0; i <= last_pos_index; i++ ){
        int value = static_cast<int> ( abs( inputArray[i]-1 ) ); 
        if (  value > last_pos_index ) continue;
        if ( inputArray[value] < 0 ) continue;
        inputArray[value] *= -1;
    }
        
    int firstMissing;
    
    for ( firstMissing = 0; firstMissing <= last_pos_index; firstMissing++ ){
        if ( inputArray[firstMissing] > 0 ) break;
    }
  
    return firstMissing+1;  
}

int main() {
	
	int *inputArray, inputArraySize;
    	
    cout << "Enter list size:";
    cin  >> inputArraySize;

    inputArray = new int[ inputArraySize ];
    cout << endl << "Enter list elements" << endl;
	for ( int i = 0; i < inputArraySize; i++ ){
	    cin >> inputArray[i];
	}
    
    cout << endl;
    
    for ( int i = 0; i < inputArraySize; i++ ){
        cout << inputArray[i] << " ";
    }

	cout << endl << findMinPosNum( inputArraySize, inputArray );
    
    delete [] inputArray;

	return 0;
}
